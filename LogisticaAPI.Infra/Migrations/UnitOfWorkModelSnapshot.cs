// <auto-generated />
using System;
using LogisticaAPI.Infra.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LogisticaAPI.Infra.Migrations
{
    [DbContext(typeof(UnitOfWork))]
    partial class UnitOfWorkModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LogisticaAPI.Domain.Models.Funcionario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Funcionarios");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "admin@logistica.com",
                            Nome = "admin",
                            Senha = "admin"
                        });
                });

            modelBuilder.Entity("LogisticaAPI.Domain.Models.Localizacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Estante")
                        .HasColumnType("int");

                    b.Property<int>("Posicao")
                        .HasColumnType("int");

                    b.Property<int?>("ProdutoId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdutoId")
                        .IsUnique();

                    b.ToTable("Localizacoes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Estante = 10,
                            Posicao = 2,
                            ProdutoId = 1
                        });
                });

            modelBuilder.Entity("LogisticaAPI.Domain.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Categoria")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataArmazenamento")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProdutoNome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RuaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RuaId");

                    b.ToTable("Produtos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Categoria = "Automotiva",
                            DataArmazenamento = new DateTime(2023, 8, 12, 0, 0, 0, 0, DateTimeKind.Local),
                            ProdutoNome = "Pneus",
                            RuaId = 1
                        });
                });

            modelBuilder.Entity("LogisticaAPI.Domain.Models.Rua", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ruas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "A"
                        });
                });

            modelBuilder.Entity("LogisticaAPI.Domain.Models.Localizacao", b =>
                {
                    b.HasOne("LogisticaAPI.Domain.Models.Produto", "Produto")
                        .WithOne("Localizacao")
                        .HasForeignKey("LogisticaAPI.Domain.Models.Localizacao", "ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("LogisticaAPI.Domain.Models.Produto", b =>
                {
                    b.HasOne("LogisticaAPI.Domain.Models.Rua", "Rua")
                        .WithMany("Produtos")
                        .HasForeignKey("RuaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rua");
                });

            modelBuilder.Entity("LogisticaAPI.Domain.Models.Produto", b =>
                {
                    b.Navigation("Localizacao")
                        .IsRequired();
                });

            modelBuilder.Entity("LogisticaAPI.Domain.Models.Rua", b =>
                {
                    b.Navigation("Produtos");
                });
#pragma warning restore 612, 618
        }
    }
}
